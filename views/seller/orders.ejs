<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Seller Orders</title>
    <link rel="stylesheet" href="/assets/css/order.css">
</head>
<body>
    <header>
        <h1>Seller Orders</h1>
    </header>
    <main>
        <section class="orders-section" id="arrivedOrders">
            <h2>Arrived Orders</h2>
            <%
            if(arrivedOrders.length>0)
            {
               for(let i=0;i< arrivedOrders.length; i++){ %>
            <div class="orders-list" id="arrivedList">
                    <h3>Order Token: <%= arrivedOrders[i].orderToken %></h3>
                    <% arrivedOrders[i].cart.items.forEach(function(item) { %>
                        <tr>
                            <td>Name:<%= item.productId.name %></td> <br><br>
                            <td>Quantity:<%= item.qty %></td><br><br>
                            <td>Price:<%= item.productId.price %></td><br><br>
                            <td>Status:<%= item.status %></td><br><br>
                        </tr>
                        </tr>
                    <% }); %>
                    <p>Total Quantity: <%= arrivedOrders[i].cart.totalQty %></p>
                    <p>Total Cost: ₹<%= arrivedOrders[i].cart.totalCost %></p>
                    <div class="order-actions">
                        <button class="accept-order" style="cursor: pointer;" data-order-id="<%= arrivedOrders[i]._id %>">Accept</button>
                        <button class="cancel-order" style="cursor: pointer;" data-order-id="<%= arrivedOrders[i]._id %>">Cancel</button>
                    </div>
                    
            </div>
            <% }
        }
        else{ %>
           <td colspan="6"> Product Not Found</td>
        <%
             }
        %> 
            <div class="status-box" id="arrivedStatus">Arrived</div>
        </section>
        
        <section class="orders-section" id="processingOrders">
            <h2>Processing Orders</h2>
            <%
            if(processingOrders.length>0)
            {
               for(let i=0;i< processingOrders.length; i++){ %>
            <div class="orders-list" id="processingList">
                <h3>Order Token: <%= processingOrders[i].orderToken %></h3>
                    <% processingOrders[i].cart.items.forEach(function(item) { %>
                        <tr>
                            <td>Name:<%= item.productId.name %></td> <br><br>
                            <td>Quantity:<%= item.qty %></td> <br><br>
                            <td>Price:<%= item.productId.price %></td> <br><br>
                            <td>Status:<%= item.status %></td> <br><br>
                        </tr>
                        <p>Total Quantity: <%= processingOrders[i].cart.totalQty %></p>
                        <p>Total Cost: ₹<%= processingOrders[i].cart.totalCost %></p>
                    <% }); %>
                    <div class="order-actions">
                        <button class="process-order" style="cursor: pointer;" data-order-id="<%= processingOrders[i]._id %>">Process</button>
                        <button class="cancel-order" style="cursor: pointer;" data-order-id="<%= processingOrders[i]._id %>">Cancel</button>
                    </div>
                    
            </div>
            <% }
        }
        else{ %>
           <td colspan="6"> Product Not Found</td>
        <%
             }
        %> 
        <div class="status-box" id="processingStatus">Processing</div>
    
        </section>
        
        <section class="orders-section" id="readyOrders">
            <h2>Ready Orders</h2>
                <%
                if(readyOrders.length>0)
                {
                   for(let i=0;i< readyOrders.length; i++){ %>
                    <div class="orders-list" id="readyList"></div>
                    <h3>Order Token: <%= readyOrders[i].orderToken %></h3>
                    <% readyOrders[i].cart.items.forEach(function(item) { %>
                        <tr>
                            <td>Name:<%= item.productId.name %></td><br><br>
                            <td>Quantity:<%= item.qty %></td><br><br>
                            <td>Price:<%= item.productId.price %></td><br><br>
                            <td>Status:<%= item.status %></td><br><br>
                        </tr>
                        </tr>
                        <p>Total Quantity: <%= readyOrders[i].cart.totalQty %></p>
                        <p>Total Cost: ₹<%= readyOrders[i].cart.totalCost %></p>
                    <% }); %>
                    <div class="order-actions">
                        <button class="deliver-order" style="cursor: pointer;" data-order-id="<%= readyOrders[i]._id %>">Delivered</button>
                        <button class="cancel-order" style="cursor: pointer;" data-order-id="<%= readyOrders[i]._id %>">Cancel</button>
                        <h3>Delivery Status: <%= readyOrders[i].isDelivered ? "Delivered" : "Pending" %></h3>
                    </div>
                    
            </div>
            <% }
        }
        else{ %>
           <td colspan="6"> Product Not Found</td>
     <%
        }
     %>  
            <div class="status-box" id="readyStatus">Ready</div>
        </section>
    </main>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // Function to handle accept order
            async function acceptOrder(orderId) {
                try {
                    const response = await fetch(`/seller/orders/accept/${orderId}`, {
                        method: 'POST',
                    });
                    const result = await response.json();
                    if (result.success) {
                        alert('Order accepted!');
                        // Optionally update the UI here to reflect the new status
                        location.reload(); // Reload page to show updated status
                    } else {
                        alert(result.message);
                    }
                } catch (error) {
                    alert('Error accepting order');
                }
            }
    
            // Function to handle cancel order
            async function cancelOrder(orderId) {
                try {
                    const response = await fetch(`/seller/orders/cancel/${orderId}`, {
                        method: 'POST',
                    });
                    const result = await response.json();
                    if (result.success) {
                        alert('Order canceled!');
                        location.reload(); // Reload page to show updated status
                    } else {
                        alert(result.message);
                    }
                } catch (error) {
                    alert('Error canceling order');
                }
            }
    
            // Function to process the order
            async function processOrder(orderId) {
                try {
                    const response = await fetch(`/seller/orders/process/${orderId}`, {
                        method: 'POST',
                    });
                    const result = await response.json();
                    if (result.success) {
                        alert('Order moved to ready!');
                        location.reload();
                    } else {
                        alert(result.message);
                    }
                } catch (error) {
                    alert('Error processing order');
                }
            }
    
            // Attach event listeners to buttons
            document.querySelectorAll('.accept-order').forEach(button => {
                button.addEventListener('click', (event) => {
                    const orderId = event.target.dataset.orderId;
                    acceptOrder(orderId);
                });
            });
    
            document.querySelectorAll('.cancel-order').forEach(button => {
                button.addEventListener('click', (event) => {
                    const orderId = event.target.dataset.orderId;
                    cancelOrder(orderId);
                });
            });
    
            document.querySelectorAll('.process-order').forEach(button => {
                button.addEventListener('click', (event) => {
                    const orderId = event.target.dataset.orderId;
                    processOrder(orderId);
                });
            });
        });

        async function deliverOrder(orderId) {
            try {
                const response = await fetch(`/seller/orders/ready/${orderId}`, {
                    method: 'POST',
                });
                const result = await response.json();
                if (result.success) {
                    alert('Order marked as delivered!');
                    location.reload(); // Optionally reload page to show the updated status
                } else {
                    alert(result.message);
                }
            } catch (error) {
                alert('Error marking order as delivered');
            }
        }
    
        // Add event listeners for delivered buttons
        document.querySelectorAll('.deliver-order').forEach(button => {
            button.addEventListener('click', (event) => {
                const orderId = event.target.dataset.orderId;
                deliverOrder(orderId);
            });
        });
    </script>    
</body>
</html>